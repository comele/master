package ec.com.doc.ele.dto;
// Generated 11-may-2016 8:40:33 by Hibernate Tools 4.0.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import ec.com.doc.ele.pojo.BuscadorDTO;

/**
 * Tcliente generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "tcliente", schema = "public")
public class Tcliente extends BuscadorDTO {

	private int idcliente;
	private Ttipodocumento ttipodocumento;
	private Tusuario tusuario;
	private Long numdocumento;
	private String primernombre;
	private String segundonombre;
	private String primerapellido;
	private String segundoapellido;
	private Long telefono;
	private String direccion;
	private String email;
	private String usuariomodificacion;
	private Date fecharegistro;
	private Date fechamodificacion;
	private Set<Tfacturaclienteexterno> tfacturaclienteexternos = new HashSet<Tfacturaclienteexterno>(0);
	private Set<Tcomprobante> tcomprobantes = new HashSet<Tcomprobante>(0);
	private Set<Tdeducibles> tdeducibleses = new HashSet<Tdeducibles>(0);

	public Tcliente() {
	}

	public Tcliente(int idcliente) {
		this.idcliente = idcliente;
	}

	public Tcliente(int idcliente, Ttipodocumento ttipodocumento, Tusuario tusuario, Long numdocumento,
			String primernombre, String segundonombre, String primerapellido, String segundoapellido, Long telefono,
			String direccion, String email, String usuariomodificacion, Date fecharegistro, Date fechamodificacion,
			Set<Tfacturaclienteexterno> tfacturaclienteexternos, Set<Tcomprobante> tcomprobantes,
			Set<Tdeducibles> tdeducibleses) {
		this.idcliente = idcliente;
		this.ttipodocumento = ttipodocumento;
		this.tusuario = tusuario;
		this.numdocumento = numdocumento;
		this.primernombre = primernombre;
		this.segundonombre = segundonombre;
		this.primerapellido = primerapellido;
		this.segundoapellido = segundoapellido;
		this.telefono = telefono;
		this.direccion = direccion;
		this.email = email;
		this.usuariomodificacion = usuariomodificacion;
		this.fecharegistro = fecharegistro;
		this.fechamodificacion = fechamodificacion;
		this.tfacturaclienteexternos = tfacturaclienteexternos;
		this.tcomprobantes = tcomprobantes;
		this.tdeducibleses = tdeducibleses;
	}

	@Id

	@Column(name = "idcliente", unique = true, nullable = false, precision = 9, scale = 0)
	public int getIdcliente() {
		return this.idcliente;
	}

	public void setIdcliente(int idcliente) {
		this.idcliente = idcliente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idtipodocumento")
	public Ttipodocumento getTtipodocumento() {
		return this.ttipodocumento;
	}

	public void setTtipodocumento(Ttipodocumento ttipodocumento) {
		this.ttipodocumento = ttipodocumento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usuarioregistro")
	public Tusuario getTusuario() {
		return this.tusuario;
	}

	public void setTusuario(Tusuario tusuario) {
		this.tusuario = tusuario;
	}

	@Column(name = "numdocumento", precision = 13, scale = 0)
	public Long getNumdocumento() {
		return this.numdocumento;
	}

	public void setNumdocumento(Long numdocumento) {
		this.numdocumento = numdocumento;
	}

	@Column(name = "primernombre", length = 64)
	public String getPrimernombre() {
		return this.primernombre;
	}

	public void setPrimernombre(String primernombre) {
		this.primernombre = primernombre;
	}

	@Column(name = "segundonombre", length = 64)
	public String getSegundonombre() {
		return this.segundonombre;
	}

	public void setSegundonombre(String segundonombre) {
		this.segundonombre = segundonombre;
	}

	@Column(name = "primerapellido", length = 64)
	public String getPrimerapellido() {
		return this.primerapellido;
	}

	public void setPrimerapellido(String primerapellido) {
		this.primerapellido = primerapellido;
	}

	@Column(name = "segundoapellido", length = 64)
	public String getSegundoapellido() {
		return this.segundoapellido;
	}

	public void setSegundoapellido(String segundoapellido) {
		this.segundoapellido = segundoapellido;
	}

	@Column(name = "telefono", precision = 10, scale = 0)
	public Long getTelefono() {
		return this.telefono;
	}

	public void setTelefono(Long telefono) {
		this.telefono = telefono;
	}

	@Column(name = "direccion", length = 128)
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	@Column(name = "email", length = 64)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "usuariomodificacion", length = 64)
	public String getUsuariomodificacion() {
		return this.usuariomodificacion;
	}

	public void setUsuariomodificacion(String usuariomodificacion) {
		this.usuariomodificacion = usuariomodificacion;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecharegistro", length = 4)
	public Date getFecharegistro() {
		return this.fecharegistro;
	}

	public void setFecharegistro(Date fecharegistro) {
		this.fecharegistro = fecharegistro;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fechamodificacion", length = 4)
	public Date getFechamodificacion() {
		return this.fechamodificacion;
	}

	public void setFechamodificacion(Date fechamodificacion) {
		this.fechamodificacion = fechamodificacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tcliente")
	public Set<Tfacturaclienteexterno> getTfacturaclienteexternos() {
		return this.tfacturaclienteexternos;
	}

	public void setTfacturaclienteexternos(Set<Tfacturaclienteexterno> tfacturaclienteexternos) {
		this.tfacturaclienteexternos = tfacturaclienteexternos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tcliente")
	public Set<Tcomprobante> getTcomprobantes() {
		return this.tcomprobantes;
	}

	public void setTcomprobantes(Set<Tcomprobante> tcomprobantes) {
		this.tcomprobantes = tcomprobantes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tcliente")
	public Set<Tdeducibles> getTdeducibleses() {
		return this.tdeducibleses;
	}

	public void setTdeducibleses(Set<Tdeducibles> tdeducibleses) {
		this.tdeducibleses = tdeducibleses;
	}

}
