package ec.com.doc.ele.dto;
// Generated 11-may-2016 8:40:33 by Hibernate Tools 4.0.0.Final

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import ec.com.doc.ele.pojo.BuscadorDTO;

/**
 * Tusuariomenu generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "tusuariomenu", schema = "public")
public class Tusuariomenu extends BuscadorDTO {

	private TusuariomenuId id;
	private Tusuario tusuario;
	private Tmenu tmenu;
	private String estadousumen;
	private String usuariomodificacion;
	private Date fecharegistro;
	private Date fechamodificacion;

	public Tusuariomenu() {
	}

	public Tusuariomenu(TusuariomenuId id, Tmenu tmenu) {
		this.id = id;
		this.tmenu = tmenu;
	}

	public Tusuariomenu(TusuariomenuId id, Tusuario tusuario, Tmenu tmenu, String estadousumen,
			String usuariomodificacion, Date fecharegistro, Date fechamodificacion) {
		this.id = id;
		this.tusuario = tusuario;
		this.tmenu = tmenu;
		this.estadousumen = estadousumen;
		this.usuariomodificacion = usuariomodificacion;
		this.fecharegistro = fecharegistro;
		this.fechamodificacion = fechamodificacion;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "idusuario", column = @Column(name = "idusuario", nullable = false, precision = 9, scale = 0)),
			@AttributeOverride(name = "idmenu", column = @Column(name = "idmenu", nullable = false, precision = 9, scale = 0)) })
	public TusuariomenuId getId() {
		return this.id;
	}

	public void setId(TusuariomenuId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usuarioregistro")
	public Tusuario getTusuario() {
		return this.tusuario;
	}

	public void setTusuario(Tusuario tusuario) {
		this.tusuario = tusuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idmenu", nullable = false, insertable = false, updatable = false)
	public Tmenu getTmenu() {
		return this.tmenu;
	}

	public void setTmenu(Tmenu tmenu) {
		this.tmenu = tmenu;
	}

	@Column(name = "estadousumen", length = 128)
	public String getEstadousumen() {
		return this.estadousumen;
	}

	public void setEstadousumen(String estadousumen) {
		this.estadousumen = estadousumen;
	}

	@Column(name = "usuariomodificacion", length = 64)
	public String getUsuariomodificacion() {
		return this.usuariomodificacion;
	}

	public void setUsuariomodificacion(String usuariomodificacion) {
		this.usuariomodificacion = usuariomodificacion;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecharegistro", length = 4)
	public Date getFecharegistro() {
		return this.fecharegistro;
	}

	public void setFecharegistro(Date fecharegistro) {
		this.fecharegistro = fecharegistro;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fechamodificacion", length = 4)
	public Date getFechamodificacion() {
		return this.fechamodificacion;
	}

	public void setFechamodificacion(Date fechamodificacion) {
		this.fechamodificacion = fechamodificacion;
	}

}
